<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cgy.dao.AwPayMapper" >
  <resultMap id="BaseResultMap" type="cn.cgy.pojo.AwPay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 21 13:57:04 GMT+08:00 2017.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="big_class_id" property="bigClassId" jdbcType="INTEGER" />
    <result column="sm_class_id" property="smClassId" jdbcType="INTEGER" />
    <result column="j_amount" property="jAmount" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 21 13:57:04 GMT+08:00 2017.
    -->
    delete from aw_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.cgy.pojo.AwPay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 21 13:57:04 GMT+08:00 2017.
    -->
    insert into aw_pay (id, user_id, big_class_id, 
      sm_class_id, j_amount, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bigClassId,jdbcType=INTEGER}, 
      #{smClassId,jdbcType=INTEGER}, #{jAmount,jdbcType=DOUBLE}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.cgy.pojo.AwPay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 21 13:57:04 GMT+08:00 2017.
    -->
    update aw_pay
    set user_id = #{userId,jdbcType=INTEGER},
      big_class_id = #{bigClassId,jdbcType=INTEGER},
      sm_class_id = #{smClassId,jdbcType=INTEGER},
      j_amount = #{jAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 21 13:57:04 GMT+08:00 2017.
    -->
    select id, user_id, big_class_id, sm_class_id, j_amount, create_time
    from aw_pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 21 13:57:04 GMT+08:00 2017.
    -->
    select id, user_id, big_class_id, sm_class_id, j_amount, create_time
    from aw_pay
  </select>

  <select id="getData" parameterType="java.util.Map" resultType="java.util.Map">
    select p.*,b.class_name as className,sm.class_name as parName,u.username
    from aw_pay p
    LEFT JOIN aw_class sm on p.sm_class_id = sm.id
    LEFT JOIN aw_class b on p.big_class_id = b.id
    LEFT JOIN aw_user u on p.user_id = u.id
    WHERE
	1= 1
	<if test="className!=null and className!=''">
        and sm.class_name like CONCAT('%',#{className},'%')
    </if>
    <if test="parName!=null and parName!=''">
      and b.class_name like CONCAT('%',#{parName},'%')
    </if>
  </select>

  <select id="getWithExt" resultType="java.util.Map">
    select p.big_class_id as parentId,c.class_name as parentName,p.create_time as createTime,sum(p.j_amount) as totAmount from aw_pay p
    LEFT JOIN aw_class c on c.id = p.big_class_id
    GROUP BY p.big_class_id,p.create_time
    ORDER BY p.create_time
  </select>

</mapper>